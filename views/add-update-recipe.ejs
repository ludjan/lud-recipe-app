<!DOCTYPE html>
<html>
    <head>
        <title>Recipe - Add or edit recipe</title>
    </head>
    <body>
        <div>
          <h1 id="recipe-heading">New recipe</h1>
          <form id="save-recipe-form" onsubmit="return false">
            <label for="recipe-name">Recipe name</label><br>
            <input id="recipe-name" type="text" name="hest"><br>
            <label for="recipe-description">Recipe Description</label><br>
            <input id="recipe-description" type="text" name="hist"><br>
            <input type="submit" id="save-recipe-btn" value="Submit">
          </form>
          <button id="dummy-create">Dummy</button> 

          <div id="recipe-ingredient-feed">
            <div>
              <label for="ingredients-select">Choose ingredient:</label>
              <select name="ingredient" id="ingredients-select"></select>
    
              <label for="unit-select">Choose unit:</label>
              <select name="unit" id="unit-select"></select>
            </div> 
          </div>
          <button id="add-ingredient-input">Add ingredient input</button>

          <div id="recipe-step-feed">
            <div>
              <label for="step-description">Choose ingredient:</label>
              <input type="text" name="step" id="step-description"></select>
            </div> 
          </div>
          <button id="add-step-input">Add recipe input</button>

          <button id="test-show-me">Show me</button>


        </div>
          
        <script src="/static/js/recipe.js"></script>
        <script src="/static/js/check_input.js"></script>
        <script type="text/javascript">

          const recipeHeading = document.getElementById('recipe-heading')
          const recipeNameInput = document.getElementById('recipe-name')
          const recipeDescriptionInput = document.getElementById('recipe-description')
          const saveRecipeForm = document.getElementById('save-recipe-form')
          const ingredientsSelect = document.getElementById('ingredients-select')
          const unitSelect = document.getElementById('unit-select')
          const testShowMe = document.getElementById('test-show-me')

          const addStepInput = document.getElementById('add-step-input')
          const recipeStepFeed = document.getElementById('recipe-step-feed')

          const addIngredientInput = document.getElementById('add-ingredient-input')
          const recipeIngredientsFeed = document.getElementById('recipe-ingredient-feed')
          
          const dummyCreateButton = document.getElementById('dummy-create')

          var data = '<%= data %>'
          var rId

          // are set by fetch
          var ingredients = []
          var units = []

          var recipeIngredients = []
          var recipeIngredientInputs = []

          var recipeSteps = []
          var recipeStepInputs = []

          console.log(data)

          '<% if (data != -1) { %>'
            rId = '<%= data.id %>'
            recipeHeading.innerText = "Edit recipe"
            recipeNameInput.value = '<%= data.name %>'
            recipeDescriptionInput.value = '<%= data.description %>'
          '<%}%>'

          saveRecipeForm.addEventListener("submit", () => {
            
            const recipeName = recipeNameInput.value
            const recipeDescription = recipeDescriptionInput.value

            if (!isAlphaNumeric(recipeName)) {
              return alert(`Name '${recipeName}' is not alphanumeric`)
            } 
            if (!isAlphaNumeric(recipeDescription)) {
              return alert(`Description '${recipeDescription}' is not alphanumeric`)
            }

            // // create the new entry
            // const newRecipe = {
            //   name: recipeNameInput.value,
            //   description: recipeDescriptionInput.value
            // } 
            // console.log(newRecipe)

            // console.log(`Data = ${data}`)

            // if (rId == null) {

            //   // async add, then re-render
            //   addRecipe(newRecipe).then(response => {
            //     if (!response.ok) {
            //       const errorMessage = `Error ${response.status} - ${response.statusText}`
            //       console.log(errorMessage)
            //     } else {
            //       window.location.pathname = ('/..') // navigates user back to main page
            //     }
            //   })
            
            // } else {
            //   console.log(`About to update recipe with id ${rId}`)
            //   updateRecipe(newRecipe, rId).then(response => {
            //     if (!response.ok) {
            //       const errorMessage = `Error ${response.status} - ${response.statusText}`
            //       console.log(errorMessage)
            //       return alert(errorMessage)
            //     } else {
            //       window.location.pathname = (`/../recipes/${rId}`)
            //     }
            //   })
            // }
          })

          addIngredientInput.addEventListener("click", () => {

            console.log(`recipeIngredientInputs.length = ${recipeIngredientInputs.length}`)

            var newDiv = document.createElement('div')
            newDiv.innerHTML = 
            `<div id="ingredient-input-${recipeIngredientInputs.length}">
              <label for="ingredients-select-${recipeIngredientInputs.length}">Choose ingredient:</label>
              <select name="ingredient" id="ingredients-select-${recipeIngredientInputs.length}"></select>
    
              <label for="ingredients-amount-${recipeIngredientInputs.length}">Amount:</label>
              <input type="number" min="1" name="amount" id="ingredients-amount-${recipeIngredientInputs.length}"</select>

              <label for="unit-select-${recipeIngredientInputs.length}">Choose unit:</label>
              <select name="unit" id="unit-select-${recipeIngredientInputs.length}"></select>
            </div>`

            recipeIngredientsFeed.appendChild(newDiv)

            const ingredientSelect = document.getElementById(`ingredients-select-${recipeIngredientInputs.length}`)
            const unitSelect = document.getElementById(`unit-select-${recipeIngredientInputs.length}`)
            const amountInput = document.getElementById(`ingredients-amount-${recipeIngredientInputs.length}`)
            
            recipeIngredientInputs.push({
              ingredientSelect: ingredientSelect,
              amountInput: amountInput,
              unitSelect: unitSelect  
            })

            console.log(ingredientSelect)
            console.log(ingredients)
            
            appendIngredientsToSelect(ingredients, ingredientSelect)
            appendUnitToSelect(units, unitSelect)
          })

          addStepInput.addEventListener("click", () => {

            const stepNumber = recipeStepInputs.length
            console.log(`recipeStepInputs.length = ${stepNumber}`)

            var newDiv = document.createElement('div')
            newDiv.innerHTML = 
            `<div>
              <div>${stepNumber}</div>
              <label for="step-description-${stepNumber}">Step description:</label>
              <input type="text" name="step" id="step-description-${stepNumber}"></select>
            </div>`

            const stepDescription = document.getElementById(`ingredients-select-${stepNumber}`)

            recipeStepInputs.push({
              stepNumber: stepNumber,
              description: stepDescription
            })

            recipeStepFeed.appendChild(newDiv)

          })

          function appendIngredientsToSelect(ingredients, select) {
            for (let i = 0; i < ingredients.length; i++) {
              var option = document.createElement('option')
              console.log(`ingredient ${ingredients[i].name}`)
              option.value = ingredients[i].name
              option.innerHTML = ingredients[i].name
              select.appendChild(option)
            }
          }

          function appendUnitToSelect(units, select) {
            for (let i = 0; i < units.length; i++) {
              // new select element
              var option = document.createElement('option')
              
              console.log(`Unit: ${units[i].name}`)
              
              option.value = units[i].name
              option.innerHTML = units[i].name
              
              select.appendChild(option)
            }
          }

          getIngredients()
            .then((response) => response.json())
            .then((data) => {
                console.log(data)
                ingredients = data
                appendIngredientsToSelect(data, ingredientsSelect)
            })

          getUnits()
            .then((response) => response.json())
            .then((data) => {
              console.log(data)
              units = data
              appendUnitToSelect(data, unitSelect)
            })


          testShowMe.addEventListener("click", () => {
            console.log(`Clicked!`)

            console.log(`RecipeIngredientInputs ${recipeIngredientInputs}`)

            // ingredients
            for (let i=0; i<recipeIngredientInputs.length;i++) {
              const { ingredientSelect, amountInput, unitSelect } = recipeIngredientInputs[i]
              console.log(`Ingredient: ${ingredientSelect.options[ingredientSelect.selectedIndex].text}`)
              console.log(`Amount: ${amountInput.value}`)
              console.log(`Unit: ${unitSelect.options[unitSelect.selectedIndex].text}`)
            }

            // steps
            for (let i=0; i<recipeStepInputs.length;i++) {
              const { stepNumber, description } = recipeStepInputs[i]
              console.log(`Step number: ${stepNumber}`)
              console.log(`Description: ${description.text}`)
            }
          })

          dummyCreateButton.addEventListener("click", () => {
            const newRecipe = {
              "recipe": {
                  "name": "Goda pannkakor",
                  "description": "Supergoda pannkakor",
                  "portions": 4
              },
              "ingredients": [
                  {
                      "ingredientId": 2,
                      "quantity": 2,
                      "unit": "piece"
                  },
                  {
                      "ingredientId": 4,
                      "quantity": 2,
                      "unit": "spicespoon"
                  },
                  {
                      "ingredientId": 3,
                      "quantity": 2,
                      "unit": "deciliter"
                  },
                  {
                      "ingredientId": 5,
                      "quantity": 4,
                      "unit": "deciliter"
                  }
              ],
              "steps": [
                  {
                      "description": "A first step"
                  },
                  {
                      "description": "A second step"
                  },
                  {
                      "description": "A third step"
                  }
              ]
            }
            console.log(`About to create ${newRecipe}`)
            createFullRecipe(newRecipe).then(response => {
                if (!response.ok) {
                  const errorMessage = `Error ${response.status} - ${response.statusText}`
                  console.log(errorMessage)
                  return alert(errorMessage)
                } else {
                  window.location.pathname = (`/..`)
                }
              })
          })

        </script> 
    </body>
</html>